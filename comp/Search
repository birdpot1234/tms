

                  {
                    (() => {
                      if (this.state.showWork.length > 0) {
                        return (
                          <View>
                            {
                              this.state.showZone.map((val, j) => (
                                <Accordion
                                  dataArray={[{ test: "test" }]}
                                  renderHeader={(expanded) => (
                                    <View
                                      style={{ flexDirection: "row", padding: 10, justifyContent: "space-between", alignItems: "center", backgroundColor: "#E2E2E1" }}
                                    >
                                      <Text style={{ fontWeight: "600" }}>
                                        {"  "}{val.Zone}
                                      </Text>
                                      {expanded
                                        ? <Icon style={{ fontSize: 18 }} name="remove-circle" />
                                        : <Icon style={{ fontSize: 18 }} name="add-circle" />}
                                    </View>
                                  )}
                                  renderContent={() => this.state.showWork.map((l, i) => {
                                    if (l.Zone == val.Zone) {
                                      return (
                                        <View style={styles.detailContent}>
                                          <View style={{ paddingLeft: 0, flexDirection: 'row' }}>
                                            <CheckBox
                                              value={this.state.CF_ALL_INVOICE[i]}
                                              onValueChange={() => {
                                                if (this.state.CF_ALL_INVOICE[i] == true) {
                                                  let n = this.state.CF_ALL_INVOICE.slice();
                                                  let s = this.state.stack_IVOICE.slice();
                                                  let t = this.state.stack_tran.slice();
                                                  n[i] = false
                                                  s[i] = l.invoiceNumber
                                                  t[i] = l.PAYMMODE
                                                  this.setState({
                                                    CF_ALL_INVOICE: n,
                                                    stack_IVOICE: s,
                                                    stack_tran: t
                                                  }, () => {
                                                    console.log("if 1 CF", this.state.CF_ALL_INVOICE)
                                                    console.log("if 1 CF", this.state.stack_IVOICE)
                                                    console.log("if 1 CF", this.state.stack_tran)
                                                  })

                                                }
                                                else if (this.state.CF_ALL_INVOICE[i] == false) {
                                                  let n = this.state.CF_ALL_INVOICE.slice();
                                                  let s = this.state.stack_IVOICE.slice();
                                                  let t = this.state.stack_tran.slice();
                                                  n[i] = true
                                                  s[i] = l.invoiceNumber
                                                  t[i] = l.PAYMMODE
                                                  this.setState({
                                                    CF_ALL_INVOICE: n,
                                                    stack_IVOICE: s,
                                                    stack_tran: t
                                                  }, () => {
                                                    console.log("if 2 CF", this.state.CF_ALL_INVOICE)
                                                    console.log("if 1 CF", this.state.stack_IVOICE)
                                                  })

                                                }
                                                else {
                                                  let n = this.state.CF_ALL_INVOICE.slice();
                                                  let s = this.state.stack_IVOICE.slice();
                                                  let t = this.state.stack_tran.slice();
                                                  n[i] = true
                                                  s[i] = l.invoiceNumber
                                                  t[i] = l.PAYMMODE
                                                  this.setState({
                                                    CF_ALL_INVOICE: n,
                                                    stack_IVOICE: s,
                                                    stack_tran: t
                                                  }, () => {
                                                    console.log("if 3 CF", this.state.CF_ALL_INVOICE)
                                                    console.log("if 1 CF", this.state.stack_IVOICE)
                                                  })

                                                }

                                              }} />
                                            <TouchableOpacity style={{ position: 'absolute', left: "8%", right: 0, justifyContent: 'center' }} onPress={() => navigate('DetailWork', { id: l.invoiceNumber, Zone: l.Zone, address: l.addressShipment, Cusname: l.DELIVERYNAME, PAYMMODE: l.PAYMMODE, index: l.id, refresion: this._RELOAD_MAIN2 })}>
                                              {
                                                (() => {
                                                  if (l.PAYMMODE == "CHEQUE") {

                                                    return (
                                                      // <View style={{ alignItems: 'center', justifyContent: 'center', width: Dimensions.get('window').width / 5.5 }} >
                                                      //   <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >
                                                      //     <TouchableOpacity onPress={() => this.checkBillRework(k.invoiceNumber)}>
                                                      //       <Text style={{ fontSize: 12, color: 'white' }}>ส่งสำเร็จ</Text>
                                                      //     </TouchableOpacity>
                                                      //   </Badge>
                                                      // </View>
                                                      <View style={{ paddingLeft: 0, flexDirection: 'row' }}>
                                                        <Text style={styles.storeLabel}>{l.invoiceNumber} </Text>
                                                        {/* <Text style={styles.storeLabel}>เครดิต </Text> */}
                                                        <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >

                                                          <Text style={{ fontSize: 12, color: 'white' }}>เครดิต</Text>

                                                        </Badge>
                                                      </View>
                                                    )
                                                  } else if
                                                    (l.PAYMMODE == "TRANSFER") {
                                                    return (
                                                      // <View style={{ alignItems: 'center', justifyContent: 'center', width: Dimensions.get('window').width / 5.5 }} >
                                                      //   <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >
                                                      //     <TouchableOpacity onPress={() => this.checkBillRework(k.invoiceNumber)}>
                                                      //       <Text style={{ fontSize: 12, color: 'white' }}>ส่งสำเร็จ</Text>
                                                      //     </TouchableOpacity>
                                                      //   </Badge>
                                                      // </View>
                                                      <View style={{ paddingLeft: 0, flexDirection: 'row' }}>
                                                        <Text style={styles.storeLabel}>{l.invoiceNumber} </Text>
                                                        {/* <Text style={styles.storeLabel}>เครดิต </Text> */}
                                                        <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >

                                                          <Text style={{ fontSize: 12, color: 'white' }}>โอนบริษัท</Text>

                                                        </Badge>
                                                      </View>
                                                    )
                                                  }
                                                  else if
                                                    (l.PAYMMODE == "CASH") {
                                                    return (
                                                      // <View style={{ alignItems: 'center', justifyContent: 'center', width: Dimensions.get('window').width / 5.5 }} >
                                                      //   <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >
                                                      //     <TouchableOpacity onPress={() => this.checkBillRework(k.invoiceNumber)}>
                                                      //       <Text style={{ fontSize: 12, color: 'white' }}>ส่งสำเร็จ</Text>
                                                      //     </TouchableOpacity>
                                                      //   </Badge>
                                                      // </View>
                                                      <View style={{ paddingLeft: 0, flexDirection: 'row' }}>
                                                        <Text style={styles.storeLabel}>{l.invoiceNumber} </Text>
                                                        {/* <Text style={styles.storeLabel}>เครดิต </Text> */}
                                                        <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange' }} >

                                                          <Text style={{ fontSize: 12, color: 'white' }}>เงินสด</Text>

                                                        </Badge>
                                                      </View>
                                                    )
                                                  }

                                                  else {
                                                    return (
                                                      // <View style={{ alignItems: 'center', justifyContent: 'center', width: Dimensions.get('window').width / 5.5 }} >
                                                      //   <Badge style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >
                                                      //     <TouchableOpacity onPress={() => this.checkBillRework(k.invoiceNumber)}>
                                                      //       <Text style={{ fontSize: 12, color: 'white' }}>ส่งไม่สำเร็จ</Text>
                                                      //     </TouchableOpacity>
                                                      //   </Badge>
                                                      // </View>
                                                      <View style={{ paddingLeft: 0, flexDirection: 'row' }}>
                                                        <Text style={styles.storeLabel}>{l.invoiceNumber} </Text>
                                                        {/* <Text style={styles.storeLabel}>เครดิต </Text> */}
                                                        {/* <Badge success style={{ height: 19, alignItems: 'center', justifyContent: 'center' }} >
                                                  
                                                      <Text style={{ fontSize: 12, color: 'white' }}>เงินสด</Text>
                                                    
                                                  </Badge> */}
                                                      </View>
                                                    )
                                                  }
                                                })()
                                              }




                                              <View style={{ paddingLeft: 0, flexDirection: 'row', marginBottom: 5 }}>
                                                <Text style={{ fontSize: 12 }}>{l.DELIVERYNAME}</Text>
                                              </View>
                                            </TouchableOpacity>
                                          </View>


                                          <View style={{ position: 'absolute', right: 10, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>
                                            <TouchableOpacity style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }} onPress={() => navigate('DetailWork', { id: l.invoiceNumber, Zone: l.Zone, address: l.addressShipment, Cusname: l.DELIVERYNAME, refresion: this._RELOAD_MAIN2 })}>
                                              <Text style={{ fontWeight: 'bold', fontSize: 13, color: 'orange', paddingHorizontal: 5 }}>{l.SUM} ฿ </Text>
                                              <Button transparent
                                                onPress={() => navigate('DetailWork', { id: l.invoiceNumber, Zone: l.Zone, address: l.addressShipment, Cusname: l.DELIVERYNAME, PAYMMODE: l.PAYMMODE, refresion: this._RELOAD_MAIN2 })}
                                              >
                                                <Icon name='ios-arrow-forward' style={{ color: 'gray' }} />
                                              </Button>
                                            </TouchableOpacity>
                                          </View>
                                        </View>
                                      )
                                    }
                                  })}
                                />
                              ))
                            }
                          </View>
                        )
                      } else {
                        return (
                          <View style={{ alignItems: 'center', marginTop: 20, borderColor: 'gray', borderWidth: 0.5 }}>
                            <Text>คุณไม่มีงานที่ต้องส่ง</Text>
                            <Text> หรือ </Text>
                            <Text>กรุณาลากลงเพื่อทำการรีโหลด</Text>
                          </View>
                        )
                      }
                    })()
                  }